<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd">
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <xs:element name="signalProps">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="defaultNodeRule" minOccurs="1" maxOccurs="1" type="DefaultNodeRule" />
        <xs:choice minOccurs="1" maxOccurs="unbounded">
          <xs:element name="branchRule" type="BranchRule" />
          <xs:element name="leafRule" type="LeafRule" />
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:group name="CommonRuleEntires">
    <!-- Note: not using xs:all since it breaks the type inheritance. Using inheritance is of higher importance.
         http://stackoverflow.com/questions/3808156/xsd-how-to-extend-a-type-with-an-unordered-list-of-elements -->
    <xs:sequence>
      <xs:element name="display" minOccurs="1" maxOccurs="1" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Human readable name used for this node/signal in UI, when it is displayed
            standalone.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="treeDisplay" minOccurs="0" maxOccurs="1" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            Human readable name used for this node/signal in UI, when it is nested
            under its parent node in the UI context.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="variable" minOccurs="0" maxOccurs="1" type="xs:string">
        <xs:annotation>
          <xs:documentation>
            For nodes represented by composite data types with signals mapped to
            data vectors (e.g. CoreSweeperWave), specifies the map key of the signal.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="group" minOccurs="0" maxOccurs="1" type="xs:string" />
      <xs:element name="limit" minOccurs="0" maxOccurs="1" type="Limit" />
      <xs:element name="scopeIndex" minOccurs="0" maxOccurs="1" type="xs:string" />
      <xs:element name="unitCalcSelector" minOccurs="0" maxOccurs="1" type="UnitCalcSelector" />
      <xs:element name="featureIndex" minOccurs="0" maxOccurs="1" type="xs:string" />
    </xs:sequence>
  </xs:group>

  <xs:complexType name="DefaultNodeRule">
    <xs:group ref="CommonRuleEntires" />
    <xs:attribute name="match" use="required" type="xs:string" fixed=".*" />
  </xs:complexType>

  <xs:complexType name="BranchRule">
    <xs:annotation>
      <xs:documentation>Represented by NodeRule class in C++</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:group ref="CommonRuleEntires" />
      <xs:element name="noSkip" minOccurs="0" maxOccurs="1" type="xs:boolean" />
      <xs:element name="signalGroup" minOccurs="0" maxOccurs="1" type="SignalGroup" />
    </xs:sequence>
    <xs:attribute name="match" use="required" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="LeafRule">
    <xs:annotation>
      <xs:documentation>Represented by NodeRule class in C++</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="dataType" minOccurs="1" maxOccurs="1" type="DataType">
        <xs:annotation>
          <xs:documentation>
            Mandatory for leaf nodes. When node is subscribed for recording, information
            about its data type is required to create the appropriate subscription handler.
            For streaming nodes with complex types use special "sample" data type.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:group ref="CommonRuleEntires" />
      <xs:element name="signal" minOccurs="0" maxOccurs="1" type="xs:string" />
      <xs:element name="signalGroup" minOccurs="0" maxOccurs="1" type="SignalGroup" />
    </xs:sequence>
    <xs:attribute name="match" use="required" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="SignalGroup">
    <xs:sequence>
      <xs:element name="signalRule" minOccurs="1" maxOccurs="unbounded" type="SignalRule" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="SignalRule">
    <xs:sequence>
      <xs:element name="bw" minOccurs="0" maxOccurs="1" type="xs:boolean" />
      <xs:element name="power" minOccurs="0" maxOccurs="1" type="xs:boolean" />
      <xs:element name="sweeperReferenceType" minOccurs="0" maxOccurs="1" type="ReferenceType">
        <xs:annotation>
          <xs:documentation>
            This property is only relevant for the sweeper derived signals that are using
            reference wave for normalization.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:group ref="CommonRuleEntires" />
    </xs:sequence>
    <xs:attribute name="name" use="required" type="xs:string" />
    <xs:attribute name="index" use="required" type="xs:integer" />
    <!-- TODO(2K): index may be optional for modules -->
    <xs:attribute name="module" use="optional" type="xs:string" />
    <xs:attribute name="devicetype" use="optional" type="xs:string" />
    <xs:attribute name="deviceoption" use="optional" type="xs:string" />
  </xs:complexType>

  <xs:complexType name="Limit">
    <xs:sequence>
      <xs:element name="label" minOccurs="1" maxOccurs="1" type="xs:string" />
      <xs:element name="symbol" minOccurs="1" maxOccurs="1" type="xs:string" />
      <xs:element name="unit" minOccurs="1" maxOccurs="1" type="Unit" />
      <xs:element name="pmin" minOccurs="1" maxOccurs="1" type="SymbolicDouble" />
      <xs:element name="pmax" minOccurs="1" maxOccurs="1" type="SymbolicDouble" />
      <xs:element name="mapping" minOccurs="1" maxOccurs="1" type="Mapping" />
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="Empty" />

  <xs:simpleType name="Mapping">
    <xs:restriction base="xs:string">
      <xs:enumeration value="LINEAR" />
      <xs:enumeration value="LOG" />
      <xs:enumeration value="DB" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="DataType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="int" />
      <xs:enumeration value="double" />
      <xs:enumeration value="string" />
      <xs:enumeration value="vector" />
      <xs:enumeration value="sample" />
      <xs:enumeration value="undefined" />
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="Unit">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="scaling" use="optional" type="SymbolicDouble" default="1.0" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:simpleType name="UnitCalcSelector">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DEMOD" />
      <xs:enumeration value="AUXOUT" />
      <xs:enumeration value="AUXOUTSCALE" />
      <xs:enumeration value="BASE" />
      <xs:enumeration value="SCOPE" />
      <xs:enumeration value="SCOPETRIGGER" />
      <xs:enumeration value="INPUTPWA" />
      <xs:enumeration value="OUTPUTPWA" />
      <xs:enumeration value="AUCART" />
      <xs:enumeration value="AUPOLAR" />
      <xs:enumeration value="BOXCAR" />
      <xs:enumeration value="PIDOUTPUT" />
      <xs:enumeration value="PIDINPUT" />
      <xs:enumeration value="PIDDUTGAIN" />
      <xs:enumeration value="PIDP" />
      <xs:enumeration value="PIDI" />
      <xs:enumeration value="PIDD" />
      <xs:enumeration value="PIDLIMITTC" />
      <xs:enumeration value="OSCFREQ" />
      <xs:enumeration value="DIO" />
      <xs:enumeration value="IMP_M1" />
      <xs:enumeration value="IMP_M2" />
      <xs:enumeration value="RAW" />
      <xs:enumeration value="LITERAL" />
      <xs:enumeration value="EMPTY" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="SymbolicDouble">
    <xs:union memberTypes="xs:double DoubleConstants" />
  </xs:simpleType>

  <xs:simpleType name="DoubleConstants">
    <xs:restriction base="xs:string">
      <xs:enumeration value="PI" />
      <xs:enumeration value="-PI" />
      <xs:enumeration value="RAD2DEG" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="ReferenceType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="REAL">
        <xs:annotation>
          <xs:documentation>
            Result is the division of the source trace by the reference trace.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="COMPLEX_X">
        <xs:annotation>
          <xs:documentation>
            Applicable to the complex trace real part (X).
            Result is the real part (X) of the complex division of the source complex trace (X,Y)
            by the reference complex trace (X,Y).
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="COMPLEX_Y">
        <xs:annotation>
          <xs:documentation>
            Applicable to the complex trace imaginary part (Y).
            Result is the imaginary part (Y) of the complex division of the source complex trace (X,Y)
            by the reference complex trace (X,Y).
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SUB">
        <xs:annotation>
          <xs:documentation>
            Result is the subtraction of the reference trace from the source trace.
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
