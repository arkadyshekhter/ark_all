// SVG theme defining

//svg { background-color: @innerBg-color; }
svg { position: relative; }
li.numplot > div { 
  background-color: @uiBlockBg-color; 
  .canvas-wrapper canvas { background-color: @innerBg-color; }
}
rect.svg-outerBg { fill: none; stroke: none; }  // background of the plot
rect.svg-fade { fill: @innerBg-color;}
rect.svg-border {fill: none; stroke: @svgLineBorder-color; }

rect.eventrect, .eventsonly { fill:none; stroke: none;  } // click handler rectangle styling
rect.dragbox { stroke: @svgDragBox-color;  stroke-opacity:0.5; fill:@svgDragBox-color; fill-opacity:0.2; } // curser and navig touch rect
#zoomRect { stroke: @svgZoomRectStroke-color;  stroke-opacity: 1; fill: @svgZoomRectFill-color; fill-opacity:0.5; } 

//rect.dragbox:hover { stroke-opacity:0.6; fill-opacity:0.15; }
rect.legendrect, .plothotkeys > .bg { fill: @legendBg-color; fill-opacity: 1; stroke: @legendBg-color; }

.legendrow {
  cursor: pointer;
  .labelBg { fill: none; stroke: none; pointer-events: fill; }
  // arrows
  .arrow-up, .arrow-down { fill: @legendArrowOff-color; stroke: @legendArrowOff-color; }  // default
  .clamping-both {
    .arrow-up, .arrow-down { fill: @legendArrowOn-color; stroke: @legendArrowOn-color; }
  }
  .clamping-up {
    .arrow-up { fill: @legendArrowOn-color; stroke: @legendArrowOn-color; }
  }
  .clamping-down {
    .arrow-down { fill: @legendArrowOn-color; stroke: @legendArrowOn-color; }
  }

  &.active {
    cursor: default;
    .labelBg {
      stroke: @uiSelectedBorder-color; fill: @uiSelectedBg-color; pointer-events: none;
    }
    text {
      fill: @uiSelectedText-color; 
    }
  }
  // generate colors for the wave color box
  .generateSvgWaveColor(0, @waveColor-0);
  .generateSvgWaveColor(1, @waveColor-1);
  .generateSvgWaveColor(2, @waveColor-2);
  .generateSvgWaveColor(3, @waveColor-3);
  .generateSvgWaveColor(4, @waveColor-4);
  .generateSvgWaveColor(5, @waveColor-5);
}

// -------------------------------------------------
// Wave Colors
// -------------------------------------------------
.generateSvgWaveColor(@index, @color)  {
  path.waveColor@{index}{
    fill: @color; stroke: @color;
  } 
}

.plothotkeys {
  text { fill: @hotkeysText-color; /*opacity: 0.5;*/ }
  &.active text { fill: @labelText-color; }
  .toggle .keyboard-icon  {
    rect { fill: @labelText-color; }
    rect.border { fill: none; stroke: @labelText-color; }
  }
}


rect.svg-noInnerBg { fill: none; }
div.innerBg { background: @innerBg-color; }
rect.svg-innerBg, rect.svg-ghosted  { fill: @innerBg-color; stroke: none; }

/*  all lines are assumed to be with the same color (except the signal polyline). All events are disabled on lines */
path, polyline.cursor-line, polyline.basemarker, line { stroke: @svgLineBorder-color; fill:none; } /* line color */
/* styling svg grid */
path.mgrid { stroke: @svgMainGrid-color;} /* styling for main grid*/
path.sgrid { stroke: @svgSubGrid-color;} /* styling for sub-grid*/
/*.zeroaxis { stroke: @svgMainGrid-color; }*/
text { fill: @labelText-color; }  /* make all text with the same color */

.close-btn-bg + path { stroke-width: 0.5px;} /* styling of "X" */
.close-btn-bg {   fill: @closeBtnBg-color; /*stroke: #999;*/ 
  &:hover { fill: @closeBtnBg_hover-color; /*stroke: #999;*/ 
    &:active { fill: @closeBtnBg_hover_active-color;
    }
  }
}
.plot-disabled{ fill: @innerBg-color; fill-opacity: 0.7; }

// multistate button arrow
path.multi-arrow {stroke: @btnOffLabel-color; fill: @btnOffLabel-color; }
rect.navbtn{
	fill: @btnOffBg-color; stroke: @btnOffBorder-color;
	&:hover { stroke: @btnOffBorder_hover-color;
		&:active {
			fill: @btnOffBg_hover_active-color;
			stroke: @btnOnBorder_hover-color;
		}
	}
	&[data-zichecked="true"] {
		fill: @btnOffBg_hover_active-color; stroke: @btnOffBg_hover_active-color;
	}
	&[readonly]{
		fill: @btnOffBg-color !important; stroke: @btnOffBorder-color !important; cursor: default !important;
	}
}

// SVG DRAGOUT-TO-DOWNLOAD
// foreign object is a workaround to enable draggable DOM elements inside SVG 
.savebtn-cont {
  & > foreignObject.navbtn-dragoutcont > img {
    border-color: @btnOffBorder-color;
    background-color: @btnOffBg-color;
    &:hover { border-color: @btnOffBorder_hover-color; };
    &:active { background-color: @btnOffBg_hover_active-color; border-color: @btnOnBorder_hover-color; }
  }
}

// image.dropdown_toggle:hover+path.multi-arrow{stroke: @btnOffLabel_hover-color; fill: @btnOffLabel_hover-color;}

.label-bg { /*stroke-width: 2.5; stroke: @innerBg-color;  stroke-opacity: 0.95;*/ fill: @innerBg-color; stroke-width: 1; stroke: @innerBg-color; opacity: 0.8; }

// statistics
path {
  &.marker-tracking{ stroke: @svgLineBorder-color; }

	&.marker-minmax{
    stroke: @statLine-color;
    stroke-dasharray: 20px,5px;
  }
  
  &.marker-avg{
    stroke: @statLine-color;
  }
  
  &.marker-std {
    stroke-opacity: 1;
    stroke: @statLine-color;
    fill: @statLine-color;
    fill-opacity: 0.3;
  }
  
  &.marker-peak {
    stroke: @labelText-color;
    fill: @labelText-color;
  }  
}

// Level/Region highlighting
.hl-region:hover ~ .hl-object {
  stroke: @svgDragBox-color;
  opacity: 0.5;
}
.hl-region:active ~ .hl-object {
  stroke: @svgDragBox-color;
  opacity: 1;
}
.hl-bar {
  fill: @statLine-color;
  fill-opacity: 0.25;
  stroke: none;
}
.hl-bar-light {
  fill: @statLine-color;
  fill-opacity: 0.15;
  stroke:none;
}

.hl-object {
  opacity: 0.3; 
  stroke-width: 2;
}